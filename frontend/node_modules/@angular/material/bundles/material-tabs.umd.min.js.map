{"version":3,"file":"material-tabs.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/tabs/ink-bar.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/tabs/tab-content.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tabs-animations.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tab-group.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/lib/tabs/tabs-module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, NgZone} from '@angular/core';\n\n\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-ink-bar',\n  host: {\n    'class': 'mat-ink-bar',\n  },\n})\nexport class MatInkBar {\n  constructor(\n    private _elementRef: ElementRef,\n    private _ngZone: NgZone) {}\n\n  /**\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\n   * Shows the ink bar if previously set as hidden.\n   * @param element\n   */\n  alignToElement(element: HTMLElement) {\n    this.show();\n\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => this._setStyles(element));\n      });\n    } else {\n      this._setStyles(element);\n    }\n  }\n\n  /** Shows the ink bar. */\n  show(): void {\n    this._elementRef.nativeElement.style.visibility = 'visible';\n  }\n\n  /** Hides the ink bar. */\n  hide(): void {\n    this._elementRef.nativeElement.style.visibility = 'hidden';\n  }\n\n  /**\n   * Sets the proper styles to the ink bar element.\n   * @param element\n   */\n  private _setStyles(element: HTMLElement) {\n    const inkBar: HTMLElement = this._elementRef.nativeElement;\n\n    inkBar.style.left = element ? (element.offsetLeft || 0) + 'px' : '0';\n    inkBar.style.width = element ? (element.offsetWidth || 0) + 'px' : '0';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef, ViewContainerRef} from '@angular/core';\nimport {CdkPortal} from '@angular/cdk/portal';\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n  selector: '[mat-tab-label], [matTabLabel]',\n})\nexport class MatTabLabel extends CdkPortal {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({selector: '[matTabContent]'})\nexport class MatTabContent {\n  constructor(public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanDisable, mixinDisabled} from '@angular/material/core';\nimport {Subject} from 'rxjs/Subject';\nimport {MatTabLabel} from './tab-label';\nimport {MatTabContent} from './tab-content';\n\n\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nexport class MatTabBase {}\nexport const _MatTabMixinBase = mixinDisabled(MatTabBase);\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab',\n  templateUrl: 'tab.html',\n  inputs: ['disabled'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  exportAs: 'matTab',\n})\nexport class MatTab extends _MatTabMixinBase implements OnInit, CanDisable, OnChanges, OnDestroy {\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n  @ContentChild(MatTabLabel) templateLabel: MatTabLabel;\n\n  /**\n   * Template provided in the tab content that will be used if present, used to enable lazy-loading\n   */\n  @ContentChild(MatTabContent, {read: TemplateRef}) _explicitContent: TemplateRef<any>;\n\n  /** Template inside the MatTab view that contains an `<ng-content>`. */\n  @ViewChild(TemplateRef) _implicitContent: TemplateRef<any>;\n\n  /** The plain text label for the tab, used when there is no template label. */\n  @Input('label') textLabel: string = '';\n\n  /** The portal that will be the hosted content of the tab */\n  private _contentPortal: TemplatePortal | null = null;\n\n  /** @docs-private */\n  get content(): TemplatePortal | null {\n    return this._contentPortal;\n  }\n\n  /** Emits whenever the label changes. */\n  readonly _labelChange = new Subject<void>();\n\n  /** Emits whenever the disable changes */\n  readonly _disableChange = new Subject<void>();\n\n  /**\n   * The relatively indexed position where 0 represents the center, negative is left, and positive\n   * represents the right.\n   */\n  position: number | null = null;\n\n  /**\n   * The initial relatively index origin of the tab if it was created and selected after there\n   * was already a selected tab. Provides context of what position the tab should originate from.\n   */\n  origin: number | null = null;\n\n  /**\n   * Whether the tab is currently active.\n   */\n  isActive = false;\n\n  constructor(private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('textLabel')) {\n      this._labelChange.next();\n    }\n\n    if (changes.hasOwnProperty('disabled')) {\n      this._disableChange.next();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._disableChange.complete();\n    this._labelChange.complete();\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(\n        this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/** Animations used by the Material tabs. */\nexport const matTabsAnimations: {\n  readonly translateTab: AnimationTriggerMetadata;\n} = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: trigger('translateTab', [\n    // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n    state('center, void, left-origin-center, right-origin-center', style({transform: 'none'})),\n    state('left', style({transform: 'translate3d(-100%, 0, 0)'})),\n    state('right', style({transform: 'translate3d(100%, 0, 0)'})),\n    transition('* => left, * => right, left => center, right => center',\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\n    transition('void => left-origin-center', [\n      style({transform: 'translate3d(-100%, 0, 0)'}),\n      animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n    ]),\n    transition('void => right-origin-center', [\n      style({transform: 'translate3d(100%, 0, 0)'}),\n      animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n    ])\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  Input,\n  Inject,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n  Directive,\n  Optional,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  forwardRef,\n  ViewChild,\n} from '@angular/core';\nimport {AnimationEvent} from '@angular/animations';\nimport {TemplatePortal, CdkPortalOutlet, PortalHostDirective} from '@angular/cdk/portal';\nimport {Directionality, Direction} from '@angular/cdk/bidi';\nimport {Subscription} from 'rxjs/Subscription';\nimport {matTabsAnimations} from './tabs-animations';\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type MatTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type MatTabBodyOriginState = 'left' | 'right';\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabBodyHost]'\n})\nexport class MatTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n  /** A subscription to events for when the tab body begins centering. */\n  private _centeringSub: Subscription;\n  /** A subscription to events for when the tab body finishes leaving from center position. */\n  private _leavingSub: Subscription;\n\n  constructor(\n    _componentFactoryResolver: ComponentFactoryResolver,\n    _viewContainerRef: ViewContainerRef,\n    @Inject(forwardRef(() => MatTabBody)) private _host: MatTabBody) {\n      super(_componentFactoryResolver, _viewContainerRef);\n  }\n\n  /** Set initial visibility or set up subscription for changing visibility. */\n  ngOnInit(): void {\n    if (this._host._isCenterPosition(this._host._position)) {\n      this.attach(this._host._content);\n    }\n    this._centeringSub = this._host._beforeCentering.subscribe((isCentering: boolean) => {\n      if (isCentering) {\n        if (!this.hasAttached()) {\n          this.attach(this._host._content);\n        }\n      }\n    });\n\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      this.detach();\n    });\n  }\n\n  /** Clean up centering subscription. */\n  ngOnDestroy(): void {\n    if (this._centeringSub && !this._centeringSub.closed) {\n      this._centeringSub.unsubscribe();\n    }\n\n    if (this._leavingSub && !this._leavingSub.closed) {\n      this._leavingSub.unsubscribe();\n    }\n  }\n}\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-body',\n  templateUrl: 'tab-body.html',\n  styleUrls: ['tab-body.css'],\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [matTabsAnimations.translateTab],\n  host: {\n    'class': 'mat-tab-body',\n  },\n})\nexport class MatTabBody implements OnInit {\n  /** Event emitted when the tab begins to animate towards the center as the active tab. */\n  @Output() readonly _onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted when the tab completes its animation towards the center. */\n  @Output() readonly _onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n   /** The portal host inside of this container into which the tab body content will be loaded. */\n  @ViewChild(PortalHostDirective) _portalHost: PortalHostDirective;\n\n  /** The tab body content to display. */\n  @Input('content') _content: TemplatePortal;\n\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n  @Input()\n  set position(position: number) {\n    if (position < 0) {\n      this._position = this._getLayoutDirection() == 'ltr' ? 'left' : 'right';\n    } else if (position > 0) {\n      this._position = this._getLayoutDirection() == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n  _position: MatTabBodyPositionState;\n\n  /** The origin position from which this tab should appear when it is centered into view. */\n  @Input()\n  set origin(origin: number) {\n    if (origin == null) { return; }\n\n    const dir = this._getLayoutDirection();\n    if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n      this._origin = 'left';\n    } else {\n      this._origin = 'right';\n    }\n  }\n  _origin: MatTabBodyOriginState;\n\n  constructor(private _elementRef: ElementRef,\n              @Optional() private _dir: Directionality) { }\n\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   */\n  ngOnInit() {\n    if (this._position == 'center' && this._origin) {\n      this._position = this._origin == 'left' ? 'left-origin-center' : 'right-origin-center';\n    }\n  }\n\n  _onTranslateTabStarted(e: AnimationEvent): void {\n    const isCentering = this._isCenterPosition(e.toState);\n    this._beforeCentering.emit(isCentering);\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n\n  _onTranslateTabComplete(e: AnimationEvent): void {\n    // If the transition to the center is complete, emit an event.\n    if (this._isCenterPosition(e.toState) && this._isCenterPosition(this._position)) {\n      this._onCentered.emit();\n    }\n\n    if (this._isCenterPosition(e.fromState) && !this._isCenterPosition(this._position)) {\n      this._afterLeavingCenter.emit();\n    }\n  }\n\n  /** The text direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Whether the provided position state is considered center, regardless of origin. */\n  _isCenterPosition(position: MatTabBodyPositionState|string): boolean {\n    return position == 'center' ||\n        position == 'left-origin-center' ||\n        position == 'right-origin-center';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\nimport {Subscription} from 'rxjs/Subscription';\nimport {MatTab} from './tab';\nimport {MatTabHeader} from './tab-header';\nimport {merge} from 'rxjs/observable/merge';\nimport {\n  CanColor,\n  CanDisableRipple,\n  mixinColor,\n  mixinDisableRipple,\n  ThemePalette\n} from '@angular/material/core';\n\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class MatTabChangeEvent {\n  /** Index of the currently-selected tab. */\n  index: number;\n  /** Reference to the currently-selected tab. */\n  tab: MatTab;\n}\n\n/** Possible positions for the tab header. */\nexport type MatTabHeaderPosition = 'above' | 'below';\n\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nexport class MatTabGroupBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nexport const _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupBase), 'primary');\n\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://www.google.com/design/spec/components/tabs.html\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-group',\n  exportAs: 'matTabGroup',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['tab-group.css'],\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color', 'disableRipple'],\n  host: {\n    'class': 'mat-tab-group',\n    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n  },\n})\nexport class MatTabGroup extends _MatTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor, CanDisableRipple {\n\n  @ContentChildren(MatTab) _tabs: QueryList<MatTab>;\n\n  @ViewChild('tabBodyWrapper') _tabBodyWrapper: ElementRef;\n\n  /** The tab index that should be selected after the content has been checked. */\n  private _indexToSelect: number | null = 0;\n\n  /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n  private _tabBodyWrapperHeight: number = 0;\n\n  /** Subscription to tabs being added/removed. */\n  private _tabsSubscription = Subscription.EMPTY;\n\n  /** Subscription to changes in the tab labels. */\n  private _tabLabelSubscription = Subscription.EMPTY;\n\n  /** Whether the tab group should grow to the size of the active tab. */\n  @Input()\n  get dynamicHeight(): boolean { return this._dynamicHeight; }\n  set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n  private _dynamicHeight: boolean = false;\n\n  /**\n   * @deprecated\n   * @deletion-target 6.0.0\n   */\n  @Input('mat-dynamic-height')\n  get _dynamicHeightDeprecated(): boolean { return this._dynamicHeight; }\n  set _dynamicHeightDeprecated(value: boolean) { this._dynamicHeight = value; }\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number | null { return this._selectedIndex; }\n  set selectedIndex(value: number | null) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  private _selectedIndex: number | null = null;\n\n  /** Position of the tab header. */\n  @Input() headerPosition: MatTabHeaderPosition = 'above';\n\n  /** Background color of the tab group. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\n\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when focus has changed within a tab group. */\n  @Output() readonly focusChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>();\n\n  /** Event emitted when the body animation has completed */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the tab selection has changed. */\n  @Output() readonly selectedTabChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>(true);\n\n  /**\n   * Event emitted when the tab selection has changed.\n   * @deprecated Use `selectedTabChange` instead.\n   * @deletion-target 6.0.0\n   */\n  @Output() readonly selectChange: EventEmitter<MatTabChangeEvent> = this.selectedTabChange;\n\n  private _groupId: number;\n\n  constructor(elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    super(elementRef);\n    this._groupId = nextId++;\n  }\n\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   */\n  ngAfterContentChecked() {\n    // Clamp the next selected index to the boundsof 0 and the tabs length.\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    let indexToSelect = this._indexToSelect =\n        Math.min(this._tabs.length - 1, Math.max(this._indexToSelect || 0, 0));\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect && this._selectedIndex != null) {\n      const tabChangeEvent = this._createChangeEvent(indexToSelect);\n      this.selectedTabChange.emit(tabChangeEvent);\n      // Emitting this value after change detection has run\n      // since the checked content may contain this variable'\n      Promise.resolve().then(() => this.selectedIndexChange.emit(indexToSelect));\n    }\n\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab: MatTab, index: number) => {\n      tab.position = index - indexToSelect;\n      tab.isActive = index === indexToSelect;\n\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngAfterContentInit() {\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      this._subscribeToTabLabels();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  ngOnDestroy() {\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n\n  _focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  private _createChangeEvent(index: number): MatTabChangeEvent {\n    const event = new MatTabChangeEvent;\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  private _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(\n        ...this._tabs.map(tab => tab._disableChange),\n        ...this._tabs.map(tab => tab._labelChange)).subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i: number): string {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i: number): string {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   */\n  _setTabBodyWrapperHeight(tabHeight: number): void {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) { return; }\n\n    const wrapper: HTMLElement = this._tabBodyWrapper.nativeElement;\n\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n\n  /** Removes the height of the tab body wrapper. */\n  _removeTabBodyWrapperHeight(): void {\n    this._tabBodyWrapperHeight = this._tabBodyWrapper.nativeElement.clientHeight;\n    this._tabBodyWrapper.nativeElement.style.height = '';\n    this.animationDone.emit();\n  }\n\n  /** Handle click events, setting new selected index if appropriate. */\n  _handleClick(tab: MatTab, tabHeader: MatTabHeader, idx: number) {\n    if (!tab.disabled) {\n      this.selectedIndex = tabHeader.focusIndex = idx;\n    }\n  }\n\n  /** Retrieves the tabindex for the tab. */\n  _getTabIndex(tab: MatTab, idx: number): number | null {\n    if (tab.disabled) {\n      return null;\n    }\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef} from '@angular/core';\nimport {CanDisable, mixinDisabled} from '@angular/material/core';\n\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nexport class MatTabLabelWrapperBase {}\nexport const _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabLabelWrapper]',\n  inputs: ['disabled'],\n  host: {\n    '[class.mat-tab-disabled]': 'disabled'\n  }\n})\nexport class MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase implements CanDisable {\n  constructor(public elementRef: ElementRef) {\n    super();\n  }\n\n  /** Sets focus on the wrapper element */\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n  getOffsetLeft(): number {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n\n  getOffsetWidth(): number {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE, HOME, END} from '@angular/cdk/keycodes';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanDisableRipple, mixinDisableRipple} from '@angular/material/core';\nimport {merge} from 'rxjs/observable/merge';\nimport {of as observableOf} from 'rxjs/observable/of';\nimport {Subscription} from 'rxjs/Subscription';\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {MatInkBar} from './ink-bar';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to MatTabHeader.\n/** @docs-private */\nexport class MatTabHeaderBase {}\nexport const _MatTabHeaderMixinBase = mixinDisableRipple(MatTabHeaderBase);\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-header',\n  templateUrl: 'tab-header.html',\n  styleUrls: ['tab-header.css'],\n  inputs: ['disableRipple'],\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n  },\n})\nexport class MatTabHeader extends _MatTabHeaderMixinBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy, CanDisableRipple {\n\n  @ContentChildren(MatTabLabelWrapper) _labelWrappers: QueryList<MatTabLabelWrapper>;\n  @ViewChild(MatInkBar) _inkBar: MatInkBar;\n  @ViewChild('tabListContainer') _tabListContainer: ElementRef;\n  @ViewChild('tabList') _tabList: ElementRef;\n\n  /** The tab index that is focused. */\n  private _focusIndex: number = 0;\n\n  /** The distance in pixels that the tab labels should be translated to the left. */\n  private _scrollDistance = 0;\n\n  /** Whether the header should scroll to the selected index after the view has been checked. */\n  private _selectedIndexChanged = false;\n\n  /** Combines listeners that will re-align the ink bar whenever they're invoked. */\n  private _realignInkBar = Subscription.EMPTY;\n\n  /** Whether the controls for pagination should be displayed */\n  _showPaginationControls = false;\n\n  /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n  _disableScrollAfter = true;\n\n  /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n  _disableScrollBefore = true;\n\n  /**\n   * The number of tab labels that are displayed on the header. When this changes, the header\n   * should re-evaluate the scroll position.\n   */\n  private _tabLabelCount: number;\n\n  /** Whether the scroll distance has changed and should be applied after the view is checked. */\n  private _scrollDistanceChanged: boolean;\n\n  private _selectedIndex: number = 0;\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number { return this._selectedIndex; }\n  set selectedIndex(value: number) {\n    value = coerceNumberProperty(value);\n    this._selectedIndexChanged = this._selectedIndex != value;\n    this._selectedIndex = value;\n    this._focusIndex = value;\n  }\n\n  /** Event emitted when the option is selected. */\n  @Output() readonly selectFocusedIndex = new EventEmitter();\n\n  /** Event emitted when a label is focused. */\n  @Output() readonly indexFocused = new EventEmitter();\n\n  constructor(private _elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _viewportRuler: ViewportRuler,\n              @Optional() private _dir: Directionality) {\n    super();\n  }\n\n  ngAfterContentChecked(): void {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._labelWrappers.length) {\n      this._updatePagination();\n      this._tabLabelCount = this._labelWrappers.length;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  _handleKeydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case RIGHT_ARROW:\n        this._focusNextTab();\n        break;\n      case LEFT_ARROW:\n        this._focusPreviousTab();\n        break;\n      case HOME:\n        this._focusFirstTab();\n        event.preventDefault();\n        break;\n      case END:\n        this._focusLastTab();\n        event.preventDefault();\n        break;\n      case ENTER:\n      case SPACE:\n        this.selectFocusedIndex.emit(this.focusIndex);\n        event.preventDefault();\n        break;\n    }\n  }\n\n  /**\n   * Aligns the ink bar to the selected tab on load.\n   */\n  ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : observableOf(null);\n    const resize = this._viewportRuler.change(150);\n    const realign = () => {\n      this._updatePagination();\n      this._alignInkBarToSelectedTab();\n    };\n\n    // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated tabs.\n    typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n    this._realignInkBar = merge(dirChange, resize).subscribe(realign);\n  }\n\n  ngOnDestroy() {\n    this._realignInkBar.unsubscribe();\n  }\n\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n  _onContentChanges() {\n    this._updatePagination();\n    this._alignInkBarToSelectedTab();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Updating the view whether pagination should be enabled or not\n   */\n  _updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n\n  /** When the focus index is set, we must manually send focus to the correct label */\n  set focusIndex(value: number) {\n    if (!this._isValidIndex(value) || this._focusIndex == value) { return; }\n\n    this._focusIndex = value;\n    this.indexFocused.emit(value);\n    this._setTabFocus(value);\n  }\n\n  /** Tracks which element has focus; used for keyboard navigation */\n  get focusIndex(): number { return this._focusIndex; }\n\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n  _isValidIndex(index: number): boolean {\n    if (!this._labelWrappers) { return true; }\n\n    const tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n  _setTabFocus(tabIndex: number) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n\n    if (this._labelWrappers && this._labelWrappers.length) {\n      this._labelWrappers.toArray()[tabIndex].focus();\n\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      const containerEl = this._tabListContainer.nativeElement;\n      const dir = this._getLayoutDirection();\n\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n\n  /**\n   * Moves the focus towards the beginning or the end of the list depending on the offset provided.\n   * Valid offsets are 1 and -1.\n   */\n  _moveFocus(offset: number) {\n    if (this._labelWrappers) {\n      const tabs: MatTabLabelWrapper[] = this._labelWrappers.toArray();\n\n      for (let i = this.focusIndex + offset; i < tabs.length && i >= 0; i += offset) {\n        if (this._isValidIndex(i)) {\n          this.focusIndex = i;\n          return;\n        }\n      }\n    }\n  }\n\n  /** Increment the focus index by 1 until a valid tab is found. */\n  _focusNextTab(): void {\n    this._moveFocus(this._getLayoutDirection() == 'ltr' ? 1 : -1);\n  }\n\n  /** Decrement the focus index by 1 until a valid tab is found. */\n  _focusPreviousTab(): void {\n    this._moveFocus(this._getLayoutDirection() == 'ltr' ? -1 : 1);\n  }\n\n  /** Focuses the first tab. */\n  private _focusFirstTab(): void {\n    for (let i = 0; i < this._labelWrappers.length; i++) {\n      if (this._isValidIndex(i)) {\n        this.focusIndex = i;\n        break;\n      }\n    }\n  }\n\n  /** Focuses the last tab. */\n  private _focusLastTab(): void {\n    for (let i = this._labelWrappers.length - 1; i > -1; i--) {\n      if (this._isValidIndex(i)) {\n        this.focusIndex = i;\n        break;\n      }\n    }\n  }\n\n  /** The layout direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n  _updateTabScrollPosition() {\n    const scrollDistance = this.scrollDistance;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n\n    this._tabList.nativeElement.style.transform = `translate3d(${translateX}px, 0, 0)`;\n  }\n\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n  get scrollDistance(): number { return this._scrollDistance; }\n  set scrollDistance(v: number) {\n    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n  }\n\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollHeader(scrollDir: ScrollDirection) {\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    // Move the scroll distance one-third the length of the tab list's viewport.\n    this.scrollDistance += (scrollDir == 'before' ? -1 : 1) * viewLength / 3;\n  }\n\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollToLabel(labelIndex: number) {\n    const selectedLabel = this._labelWrappers ? this._labelWrappers.toArray()[labelIndex] : null;\n\n    if (!selectedLabel) { return; }\n\n    // The view length is the visible width of the tab labels.\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    let labelBeforePos: number, labelAfterPos: number;\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = selectedLabel.getOffsetLeft();\n      labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n    } else {\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\n      labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n    }\n\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkPaginationEnabled() {\n    const isEnabled =\n        this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n    if (!isEnabled) {\n      this.scrollDistance = 0;\n    }\n\n    if (isEnabled !== this._showPaginationControls) {\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._showPaginationControls = isEnabled;\n  }\n\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkScrollingControls() {\n    // Check if the pagination arrows should be activated.\n    this._disableScrollBefore = this.scrollDistance == 0;\n    this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _getMaxScrollDistance(): number {\n    const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return (lengthOfTabList - viewLength) || 0;\n  }\n\n  /** Tells the ink-bar to align itself to the current label wrapper */\n  private _alignInkBarToSelectedTab(): void {\n    const selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length ?\n        this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement :\n        null;\n\n    this._inkBar.alignToElement(selectedLabelWrapper);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Platform} from '@angular/cdk/platform';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanDisable,\n  CanDisableRipple,\n  HasTabIndex,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  mixinColor,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinTabIndex, RippleConfig,\n  RippleGlobalOptions,\n  RippleRenderer,\n  RippleTarget,\n  ThemePalette,\n} from '@angular/material/core';\nimport {merge} from 'rxjs/observable/merge';\nimport {of as observableOf} from 'rxjs/observable/of';\nimport {takeUntil} from 'rxjs/operators/takeUntil';\nimport {Subject} from 'rxjs/Subject';\nimport {MatInkBar} from '../ink-bar';\n\n\n// Boilerplate for applying mixins to MatTabNav.\n/** @docs-private */\nexport class MatTabNavBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nexport const _MatTabNavMixinBase = mixinColor(MatTabNavBase, 'primary');\n\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-tab-nav-bar]',\n  exportAs: 'matTabNavBar, matTabNav',\n  inputs: ['color'],\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['tab-nav-bar.css'],\n  host: {'class': 'mat-tab-nav-bar'},\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatTabNav extends _MatTabNavMixinBase implements AfterContentInit, CanColor,\n    OnDestroy {\n\n  /** Subject that emits when the component has been destroyed. */\n  private readonly _onDestroy = new Subject<void>();\n\n  _activeLinkChanged: boolean;\n  _activeLinkElement: ElementRef;\n\n  @ViewChild(MatInkBar) _inkBar: MatInkBar;\n\n  /** Query list of all tab links of the tab navigation. */\n  @ContentChildren(forwardRef(() => MatTabLink), {descendants: true})\n  _tabLinks: QueryList<MatTabLink>;\n\n  /** Background color of the tab nav. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\n\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Whether ripples should be disabled for all links or not. */\n  @Input()\n  get disableRipple() { return this._disableRipple; }\n  set disableRipple(value: boolean) {\n    this._disableRipple = coerceBooleanProperty(value);\n    this._setLinkDisableRipple();\n  }\n  private _disableRipple: boolean = false;\n\n  constructor(elementRef: ElementRef,\n              @Optional() private _dir: Directionality,\n              private _ngZone: NgZone,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _viewportRuler: ViewportRuler) {\n    super(elementRef);\n  }\n\n  /** Notifies the component that the active link has been changed. */\n  updateActiveLink(element: ElementRef) {\n    this._activeLinkChanged = this._activeLinkElement != element;\n    this._activeLinkElement = element;\n\n    if (this._activeLinkChanged) {\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this._ngZone.runOutsideAngular(() => {\n      const dirChange = this._dir ? this._dir.change : observableOf(null);\n\n      return merge(dirChange, this._viewportRuler.change(10)).pipe(takeUntil(this._onDestroy))\n          .subscribe(() => this._alignInkBar());\n    });\n\n    this._setLinkDisableRipple();\n  }\n\n  /** Checks if the active link has been changed and, if so, will update the ink bar. */\n  ngAfterContentChecked(): void {\n    if (this._activeLinkChanged) {\n      this._alignInkBar();\n      this._activeLinkChanged = false;\n    }\n  }\n\n  ngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n  }\n\n  /** Aligns the ink bar to the active link. */\n  _alignInkBar(): void {\n    if (this._activeLinkElement) {\n      this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n    }\n  }\n\n  /** Sets the `disableRipple` property on each link of the navigation bar. */\n  private _setLinkDisableRipple() {\n    if (this._tabLinks) {\n      this._tabLinks.forEach(link => link.disableRipple = this.disableRipple);\n    }\n  }\n}\n\n\n// Boilerplate for applying mixins to MatTabLink.\nexport class MatTabLinkBase {}\nexport const _MatTabLinkMixinBase =\n  mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkBase)));\n\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n@Directive({\n  selector: '[mat-tab-link], [matTabLink]',\n  exportAs: 'matTabLink',\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\n  host: {\n    'class': 'mat-tab-link',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.tabIndex]': 'tabIndex',\n    '[class.mat-tab-disabled]': 'disabled',\n    '[class.mat-tab-label-active]': 'active',\n    '(click)': '_handleClick($event)'\n  }\n})\nexport class MatTabLink extends _MatTabLinkMixinBase\n    implements OnDestroy, CanDisable, CanDisableRipple, HasTabIndex, RippleTarget {\n\n  /** Whether the tab link is active or not. */\n  private _isActive: boolean = false;\n\n  /** Reference to the RippleRenderer for the tab-link. */\n  private _tabLinkRipple: RippleRenderer;\n\n  /** Whether the link is active. */\n  @Input()\n  get active(): boolean { return this._isActive; }\n  set active(value: boolean) {\n    this._isActive = value;\n    if (value) {\n      this._tabNavBar.updateActiveLink(this._elementRef);\n    }\n  }\n\n  /**\n   * Ripple configuration for ripples that are launched on pointer down.\n   * @docs-private\n   */\n  rippleConfig: RippleConfig = {};\n\n  /**\n   * Whether ripples are disabled on interaction\n   * @docs-private\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || this.disableRipple;\n  }\n\n  constructor(private _tabNavBar: MatTabNav,\n              private _elementRef: ElementRef,\n              ngZone: NgZone,\n              platform: Platform,\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalOptions: RippleGlobalOptions,\n              @Attribute('tabindex') tabIndex: string) {\n    super();\n\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, _elementRef, platform);\n    this._tabLinkRipple.setupTriggerEvents(_elementRef.nativeElement);\n\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    if (globalOptions) {\n      this.rippleConfig = {\n        terminateOnPointerUp: globalOptions.terminateOnPointerUp,\n        speedFactor: globalOptions.baseSpeedFactor,\n        animation: globalOptions.animation,\n      };\n    }\n  }\n\n  ngOnDestroy() {\n    this._tabLinkRipple._removeTriggerEvents();\n  }\n\n  /**\n   * Handles the click event, preventing default navigation if the tab link is disabled.\n   */\n  _handleClick(event: MouseEvent) {\n    if (this.disabled) {\n      event.preventDefault();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollDispatchModule, VIEWPORT_RULER_PROVIDER} from '@angular/cdk/scrolling';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatInkBar} from './ink-bar';\nimport {MatTab} from './tab';\nimport {MatTabBody, MatTabBodyPortal} from './tab-body';\nimport {MatTabGroup} from './tab-group';\nimport {MatTabHeader} from './tab-header';\nimport {MatTabLabel} from './tab-label';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {MatTabLink, MatTabNav} from './tab-nav-bar/tab-nav-bar';\nimport {MatTabContent} from './tab-content';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    PortalModule,\n    MatRippleModule,\n    ObserversModule,\n    ScrollDispatchModule,\n  ],\n  // Don't export all components because some are only to be used internally.\n  exports: [\n    MatCommonModule,\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatTabNav,\n    MatTabLink,\n    MatTabContent,\n  ],\n  declarations: [\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatInkBar,\n    MatTabLabelWrapper,\n    MatTabNav,\n    MatTabLink,\n    MatTabBody,\n    MatTabBodyPortal,\n    MatTabHeader,\n    MatTabContent,\n  ],\n  providers: [VIEWPORT_RULER_PROVIDER],\n})\nexport class MatTabsModule {}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","setPrototypeOf","__proto__","Array","p","hasOwnProperty","MatInkBar","_elementRef","_ngZone","alignToElement","element","_this","show","requestAnimationFrame","runOutsideAngular","_setStyles","nativeElement","style","visibility","hide","inkBar","left","offsetLeft","width","offsetWidth","type","Directive","args","selector","host","class","ElementRef","NgZone","MatTabLabel","templateRef","viewContainerRef","_super","call","tslib_1.__extends","TemplateRef","ViewContainerRef","CdkPortal","MatTabContent","template","MatTabBase","_MatTabMixinBase","mixinDisabled","MatTab","_viewContainerRef","textLabel","_contentPortal","_labelChange","Subject","_disableChange","position","origin","isActive","defineProperty","ngOnChanges","changes","next","ngOnDestroy","complete","ngOnInit","TemplatePortal","_explicitContent","_implicitContent","Component","inputs","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","preserveWhitespaces","exportAs","propDecorators","ViewChild","Input","matTabsAnimations","translateTab","trigger","state","transform","transition","animate","MatTabBodyPortal","_componentFactoryResolver","_host","_isCenterPosition","_position","attach","_content","_centeringSub","_beforeCentering","subscribe","isCentering","hasAttached","_leavingSub","_afterLeavingCenter","detach","closed","unsubscribe","ComponentFactoryResolver","MatTabBody","decorators","Inject","forwardRef","CdkPortalOutlet","_dir","_onCentering","EventEmitter","_onCentered","_getLayoutDirection","dir","_origin","_onTranslateTabStarted","e","toState","emit","clientHeight","_onTranslateTabComplete","fromState","value","styles","animations","Output","_portalHost","PortalHostDirective","nextId","MatTabChangeEvent","MatTabGroupBase","_MatTabGroupMixinBase","mixinColor","mixinDisableRipple","MatTabGroup","elementRef","_changeDetectorRef","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","Subscription","EMPTY","_tabLabelSubscription","_dynamicHeight","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","selectChange","_groupId","coerceBooleanProperty","coerceNumberProperty","_backgroundColor","classList","remove","backgroundColor","add","ngAfterContentChecked","indexToSelect","Math","min","_tabs","length","max","tabChangeEvent","_createChangeEvent","Promise","resolve","then","forEach","tab","index","markForCheck","ngAfterContentInit","_subscribeToTabLabels","_focusChanged","event","toArray","merge","apply","map","concat","_getTabLabelId","i","_getTabContentId","_setTabBodyWrapperHeight","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","_removeTabBodyWrapperHeight","_handleClick","tabHeader","idx","disabled","selectedIndex","focusIndex","_getTabIndex","[class.mat-tab-group-dynamic-height]","[class.mat-tab-group-inverted-header]","dynamicHeight","_dynamicHeightDeprecated","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","MatTabLabelWrapper","focus","getOffsetLeft","getOffsetWidth","[class.mat-tab-disabled]","MatTabHeaderBase","_MatTabHeaderMixinBase","MatTabHeader","_viewportRuler","_focusIndex","_scrollDistance","_selectedIndexChanged","_realignInkBar","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","selectFocusedIndex","indexFocused","_tabLabelCount","_labelWrappers","_updatePagination","_scrollToLabel","_checkScrollingControls","_alignInkBarToSelectedTab","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","keyCode","RIGHT_ARROW","_focusNextTab","LEFT_ARROW","_focusPreviousTab","HOME","_focusFirstTab","preventDefault","END","_focusLastTab","ENTER","SPACE","dirChange","change","observableOf","resize","realign","_onContentChanges","_checkPaginationEnabled","_isValidIndex","_setTabFocus","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","_moveFocus","offset","tabs","scrollDistance","translateX","_tabList","v","_getMaxScrollDistance","_scrollHeader","scrollDir","viewLength","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","selectedLabelWrapper","_inkBar","[class.mat-tab-header-pagination-controls-enabled]","[class.mat-tab-header-rtl]","ViewportRuler","Directionality","Optional","MatTabNavBase","_MatTabNavMixinBase","MatTabNav","_onDestroy","_disableRipple","_setLinkDisableRipple","updateActiveLink","_activeLinkChanged","_activeLinkElement","pipe","takeUntil","_alignInkBar","_tabLinks","link","disableRipple","ChangeDetectorRef","MatTabLinkBase","_MatTabLinkMixinBase","mixinTabIndex","_tabNavBar","_tabLinkRipple","setupTriggerEvents","parseInt","globalOptions","rippleConfig","terminateOnPointerUp","speedFactor","baseSpeedFactor","animation","get","enumerable","configurable","MatTabLink","[attr.aria-disabled]","[attr.tabIndex]","[class.mat-tab-label-active]","(click)","Platform","undefined","MAT_RIPPLE_GLOBAL_OPTIONS","Attribute","MatTabsModule","NgModule","imports","CommonModule","MatCommonModule","PortalModule","MatRippleModule","ObserversModule","ScrollDispatchModule","exports","declarations","providers","VIEWPORT_RULER_PROVIDER"],"mappings":"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"}